enum Role {
	ADMIN,
	CARETAKER
}

type Work {
	id: ID! @id

	name: String!
	description: String!
	visibility: Boolean!
	views: Int!
	usage: Int!
	imageUrl: String!

	user: User! @relation(name: "UserWork", onDelete: SET_NULL)
	category: Category! @relation(name: "CategoryWork", onDelete: SET_NULL)

	imageDatas: [ImageData!]! @relation(name: "ImageData", onDelete: CASCADE)
	voiceDatas: [VoiceData!]! @relation(name: "VoiceData", onDelete: CASCADE)
	likedBy: [User!]! @relation(name: "Like", onDelete: SET_NULL)
	favouritedBy: [User!]! @relation(name: "Favourite", onDelete: SET_NULL)
	reports: [Report!]! @relation(name: "WorkReport", onDelete: CASCADE)
	comments: [Comment!]! @relation(name: "WorkComment", onDelete: CASCADE)
	synthesizations: [Synthesization!]! @relation(name: "WorkSynthesization", onDelete: CASCADE)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type User {
	id: ID! @id
	
	name: String!
	email: String! @unique
	password: String!
	imageUrl: String!

	role: Role!

	works: [Work!]! @relation(name: "UserWork", onDelete: CASCADE)
	liked: [Work!]! @relation(name: "Like", onDelete: SET_NULL)
	favourited: [Work!]! @relation(name: "Favourite", onDelete: SET_NULL)
	reports: [Report!]! @relation(name: "UserReport", onDelete: CASCADE)
	comments: [Comment!]! @relation(name: "UserComment", onDelete: CASCADE)
	following: [User!]! @relation(name: "UserFollowing", onDelete: SET_NULL)
	synthesizations: [Synthesization!]! @relation(name: "UserSynthesization", onDelete: CASCADE)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type ImageData {
	id: ID! @id

	fileUrl: String!

	work: Work! @relation(name: "ImageData", onDelete: SET_NULL)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type VoiceData {
	id: ID! @id

	fileUrl: String!

	work: Work! @relation(name: "VoiceData", onDelete: SET_NULL)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Report {
	id: ID! @id

	reason: String!

	user: User! @relation(name: "UserReport", onDelete: SET_NULL)
	work: Work! @relation(name: "WorkReport", onDelete: SET_NULL)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Comment {
	id: ID! @id

	content: String!

	user: User! @relation(name: "UserComment", onDelete: SET_NULL)
	work: Work! @relation(name: "WorkComment", onDelete: SET_NULL)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Category {
	id: ID! @id

	name: String!
	works: [Work!]! @relation(name: "CategoryWork", onDelete: CASCADE)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Synthesization {
	id: ID! @id

	progress: Int!

	source: String!
	result: String!
	
	user: User! @relation(name: "UserSynthesization", onDelete: SET_NULL)
	work: Work! @relation(name: "WorkSynthesization", onDelete: SET_NULL)

	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}
